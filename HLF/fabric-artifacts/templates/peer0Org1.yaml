apiVersion: v1
kind: Service
metadata:
  labels:
    service: test-peer0org1  
  name: test-peer0-xyz
  namespace: {{ .Values.namespace.org1namespace }}
spec:
  clusterIP: {{.Values.clusterIpRange}}.241.223
  externalTrafficPolicy: Cluster
  ports:
  - name: 7051-to-7051-tcp
    nodePort: 30422
    port: 7051
    protocol: TCP
    targetPort: 7051
  - name: 7053-to-7053-tcp
    nodePort: 31598
    port: 7053
    protocol: TCP
    targetPort: 7053
  selector:
    service: test-peer0org1
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: {{ .Release.Name }}-peer0org1
  name: {{ .Release.Name }}-peer0org1
  namespace: {{ .Values.namespace.org1namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: {{ .Release.Name }}-peer0org1
  template:
    metadata:
      name: {{ .Release.Name }}-peer0org1
      labels:
        service: {{ .Release.Name }}-peer0org1
      namespace: {{ .Values.namespace.org1namespace }}
    spec:
      # hostAliases:
      # - ip: "{{ .Values.fabricOrderer.addr }}"
      # hostnames:
      #  - "orderer.{{ .Values.fabricOrderer.orgDomain }}"
      containers:
      - command:
        - peer
        - node
        - start
        env:
        - name: CORE_VM_ENDPOINT
          value: unix:///var/run/docker.sock
        - name: CORE_LOGGING_LEVEL
          value: DEBUG
        - name: CORE_PEER_ID
          value: peer0.{{ .Values.fabricOrg1.domain }}
        - name: CORE_PEER_ADDRESS
          value: 0.0.0.0:7051
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: 0.0.0.0:7051
        - name: CORE_PEER_EXTERNALENDPOINT
          value: "true"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        - name: CORE_PEER_MSPCONFIGPATH
          value: /etc/crypto-config/opensource.com/HLF/crypto-config/peerOrganizations/{{ .Values.fabricOrg1.domain }}/peers/peer0.{{ .Values.fabricOrg1.domain }}/msp
        - name: CORE_PEER_LOCALMSPID
          value: {{ .Values.fabricOrg1.msp }}
        image: {{ .Values.fabricPeer.image }}:{{ .Values.fabricPeer.tag }}
        name: {{ .Release.Name }}-peer0org1
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric
        ports:
        - containerPort: 7051
        - containerPort: 7053
        - containerPort: 7052
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: {{ .Release.Name }}-docker-sock
        - mountPath: /etc/crypto-config
          name: {{ .Release.Name }}-crypto-config
          readOnly: true
        - mountPath: /var/hyperledger/production
          name: {{ .Release.Name }}-fabric
      volumes:
      - name: {{ .Release.Name }}-docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: {{ .Release.Name }}-fabric
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-peer0org1-pvc
      - name: {{ .Release.Name }}-crypto-config
{{ toYaml .Values.cryptoConfigMount | indent 8 }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-peer0org1-pvc
  namespace: {{ .Values.namespace.org1namespace }}
  labels:
    app: {{ .Release.Name }}-peer0org1-pvc
spec:
  storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi